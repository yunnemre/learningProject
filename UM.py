# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calÄ±sma1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt5 import QtCore, QtGui, QtWidgets
import UDM, UDT
from PyQt5.QtWidgets import QMainWindow, QAction, qApp, QApplication, QStyle,QMessageBox,QMenuBar
from PyQt5.QtChart import QChart, QChartView, QPieSeries, QPieSlice,QLineSeries
from PyQt5.QtGui import QPainter, QPen, QColor,QPixmap
from PyQt5.QtCore import Qt
import pymysql
import UCP



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(937, 612)
        font = QtGui.QFont()
        font.setItalic(False)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/wheat.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(30, 30, 884, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(20)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.giderbtn = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.giderbtn.sizePolicy().hasHeightForWidth())
        self.giderbtn.setSizePolicy(sizePolicy)
        self.giderbtn.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.giderbtn.setFont(font)
        self.giderbtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.giderbtn.setStyleSheet("\n"
"background-color: rgb(255, 255, 255);\n"
"alternate-background-color: rgb(0, 85, 255);")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/revenue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.giderbtn.setIcon(icon)
        self.giderbtn.setIconSize(QtCore.QSize(25, 25))
        self.giderbtn.setCheckable(False)
        self.giderbtn.setAutoRepeat(False)
        self.giderbtn.setAutoExclusive(False)
        self.giderbtn.setAutoRepeatDelay(300)
        self.giderbtn.setAutoDefault(False)
        self.giderbtn.clicked.connect(self.mustericliked)
        self.giderbtn.setObjectName("giderbtn")
        self.horizontalLayout.addWidget(self.giderbtn)
        self.gelirbtn = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.gelirbtn.setEnabled(True)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gelirbtn.sizePolicy().hasHeightForWidth())
        self.gelirbtn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.gelirbtn.setFont(font)
        self.gelirbtn.setStyleSheet("\n"
"background-color: rgb(255, 255, 255);\n"
"alternate-background-color: rgb(0, 85, 255);")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/stock-market.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gelirbtn.setIcon(icon1)
        self.gelirbtn.setIconSize(QtCore.QSize(25, 25))
        self.gelirbtn.clicked.connect(self.tedarikcliked)
        self.gelirbtn.setObjectName("gelirbtn")
        self.horizontalLayout.addWidget(self.gelirbtn)
        self.stkdrumubtn = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stkdrumubtn.sizePolicy().hasHeightForWidth())
        self.stkdrumubtn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.stkdrumubtn.setFont(font)
        self.stkdrumubtn.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"alternate-background-color: rgb(0, 85, 255);")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/warehouse.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stkdrumubtn.setIcon(icon2)
        self.stkdrumubtn.setIconSize(QtCore.QSize(25, 25))
        self.stkdrumubtn.setObjectName("stkdrumubtn")
        self.stkdrumubtn.clicked.connect(self.stokdurumuclk)
        self.horizontalLayout.addWidget(self.stkdrumubtn)
        self.gelirgidertakibbtn = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gelirgidertakibbtn.sizePolicy().hasHeightForWidth())
        self.gelirgidertakibbtn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.gelirgidertakibbtn.setFont(font)
        self.gelirgidertakibbtn.setToolTip("")
        self.gelirgidertakibbtn.setWhatsThis("")
        self.gelirgidertakibbtn.setStyleSheet("\n"
"background-color: rgb(255, 255, 255);\n"
"alternate-background-color: rgb(0, 85, 255);")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/expensesrede.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gelirgidertakibbtn.setIcon(icon3)
        self.gelirgidertakibbtn.setIconSize(QtCore.QSize(25, 25))
        self.gelirgidertakibbtn.setObjectName("gelirgidertakibbtn")
        self.gelirgidertakibbtn.clicked.connect(self.musteritedariktakibclk)
        self.horizontalLayout.addWidget(self.gelirgidertakibbtn)
        self.raporlabtn = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.raporlabtn.sizePolicy().hasHeightForWidth())
        self.raporlabtn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.raporlabtn.setFont(font)
        self.raporlabtn.setStyleSheet("\n"
"background-color: rgb(255, 255, 255);\n"
"alternate-background-color: rgb(0, 85, 255);")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/report.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.raporlabtn.setIcon(icon4)
        self.raporlabtn.setIconSize(QtCore.QSize(25, 25))
        self.raporlabtn.setObjectName("raporlabtn")
        self.raporlabtn.clicked.connect(self.raporlarclk)
        self.horizontalLayout.addWidget(self.raporlabtn)
        self.widget_3 = QtWidgets.QWidget(self.centralwidget)
        self.widget_3.setGeometry(QtCore.QRect(40, 110, 861, 391))
        self.widget_3.setObjectName("widget_3")
        self.groupBox_2 = QtWidgets.QGroupBox(self.widget_3)
        self.groupBox_2.setGeometry(QtCore.QRect(430, 10, 421, 371))
        self.groupBox_2.setObjectName("groupBox_2")
        self.stokgraphic = QtWidgets.QWidget(self.groupBox_2)
        self.stokgraphic.setGeometry(QtCore.QRect(5, 5, 410, 365))
        self.stokgraphic.setObjectName("stokgraphic")
        self.layout=QtWidgets.QVBoxLayout()
        self.layoutrpr = QtWidgets.QVBoxLayout()

        self.groupBox = QtWidgets.QGroupBox(self.widget_3)
        self.groupBox.setGeometry(QtCore.QRect(20, 10, 411, 371))
        self.groupBox.setObjectName("groupBox")
        self.stoktable = QtWidgets.QWidget(self.groupBox)
        self.stoktable.setGeometry(QtCore.QRect(15, 21, 381, 331))
        self.stoktable.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.stoktable.setObjectName("stoktable")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 240, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuYonetici = QtWidgets.QMenu(self.menuBar)
        self.menuYonetici.setObjectName("menuYonetici")
        MainWindow.setMenuBar(self.menuBar)
        self.actionSifre_Degistir = QtWidgets.QAction(MainWindow)
        self.actionSifre_Degistir.setObjectName("actionSifre_Degistir")
        self.actionc_k_s_yap = QtWidgets.QAction(MainWindow)
        self.actionc_k_s_yap.setObjectName("actionc_k_s_yap")

        ##################################################################
        self.piechart()




        #################################################

        self.centralwidget2 = QtWidgets.QWidget(MainWindow)
        self.centralwidget2.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(40, 100, 861, 446))
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")



        self.marama = QtWidgets.QLineEdit(self.tab)
        self.marama.setGeometry(QtCore.QRect(7, 6, 161, 20))
        self.marama.setObjectName("marama")
        self.marama.setPlaceholderText("Search...")
        self.marama.textChanged.connect(self.Rsearch)
        self.msralamacmb = QtWidgets.QComboBox(self.tab)
        self.msralamacmb.setGeometry(QtCore.QRect(460, 6, 161, 20))
        self.msralamacmb.setObjectName("msralamacmb")
        self.msralamacmb.addItem("")
        self.msralamacmb.addItem("")
        self.msralamacmb.addItem("")
        self.msralamacmb.addItem("")
        self.msralamacmb.addItem("")
        self.msralamacmb.addItem("")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.pushButton = QtWidgets.QPushButton(self.tab_2)
        self.pushButton.setGeometry(QtCore.QRect(390, 380, 75, 31))
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                      "alternate-background-color: rgb(0, 85, 255);border :5px solid ;"
                                      "border-top-color : red; "
                                      "border-left-color :red;"
                                      "border-right-color :red;"
                                      "border-bottom-color : red")
        self.pushButton.setObjectName("pushButton")

        self.pushButton2 = QtWidgets.QPushButton(self.tab)
        self.pushButton2.setGeometry(QtCore.QRect(390, 380, 75, 31))
        self.pushButton2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                       "alternate-background-color: rgb(0, 85, 255);border :5px solid ;"
                                       "border-top-color : red; "
                                       "border-left-color :red;"
                                       "border-right-color :red;"
                                       "border-bottom-color : red")
        self.pushButton2.setObjectName("pushButton2")

        self.marama_2 = QtWidgets.QLineEdit(self.tab_2)
        self.marama_2.setGeometry(QtCore.QRect(7, 6, 161, 20))
        self.marama_2.setObjectName("marama_2")
        self.marama_2.setPlaceholderText("Search...")
        self.marama_2.textChanged.connect(self.search)
        self.msralamacmb_2 = QtWidgets.QComboBox(self.tab_2)
        self.msralamacmb_2.setGeometry(QtCore.QRect(460, 6, 161, 20))
        self.msralamacmb_2.setObjectName("msralamacmb_2")
        self.msralamacmb_2.addItem("")
        self.msralamacmb_2.addItem("")
        self.msralamacmb_2.addItem("")
        self.msralamacmb_2.addItem("")
        self.msralamacmb_2.addItem("")
        self.msralamacmb_2.addItem("")
        self.mtablewidget = QtWidgets.QTableWidget(self.tab_2)
        self.mtablewidget.setGeometry(QtCore.QRect(-1, 30, 871, 341))
        self.mtablewidget.setObjectName("mtablewidget")

        self.msicerik()
        #############################################################
        self.mtablewidget2 = QtWidgets.QTableWidget(self.tab)
        self.mtablewidget2.setGeometry(QtCore.QRect(-1, 30, 871, 341))
        self.mtablewidget2.setObjectName("mtablewidget2")

        self.tsicerik()

        self.tabWidget.addTab(self.tab_2, "")

        self.mtablewidget.setHorizontalHeaderLabels(
                ["MGID", "MID", "UID", "UMiktar", "Umiktarbirim", "UBirimFiyat", "Ufiyatbirim", "GTarih", "GAcÄ±klama"])
        self.minsert()
        #################################################

        self.mtablewidget2.setHorizontalHeaderLabels(
                ["TGID", "TID", "UID", "UMiktar", "UBirimtur", "Ubirimfiyati", "Ufiyattur", "GTTarih", "TAcÄ±klama"])
        self.tinsert()


        self.msralamacmb.currentTextChanged.connect(self.changet)
        self.msralamacmb_2.currentTextChanged.connect(self.change)

        self.pushButton.clicked.connect(self.show_popup)
        self.mtablewidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.pushButton2.clicked.connect(self.tdrk_show_popup)
        self.mtablewidget2.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.mtablewidget.clearSelection()
        self.mtablewidget2.clearSelection()

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.tabWidget.hide()

        self.widget5 = QtWidgets.QWidget(self.centralwidget)
        self.widget5.setGeometry(QtCore.QRect(300, 150, 331, 301))
        self.widget5.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget5)
        self.label.setGeometry(QtCore.QRect(10, 0, 311, 301))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("../ProjeÄ°cerik/icons/BaÅlÄ±ksÄ±z-12222btk.png"))
        self.label.setObjectName("label")
        self.widget5.hide()

        #########################################################################################

        self.stablewidget = QtWidgets.QTableWidget(self.stoktable)
        self.stablewidget.setGeometry(QtCore.QRect(0, 0, 381, 331))
        self.stablewidget.setObjectName("stablewidget")
        self.stablewidget.setColumnCount(2)
        self.stablewidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.stablewidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.stablewidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()

        self.stablewidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()

        self.stablewidget.setColumnWidth(0, 100)
        self.stablewidget.setColumnWidth(1, 100)

        self.stablewidget.setHorizontalHeaderLabels(
                ["UID", "UStok"])
        self.stokinsert()

        ################################################
        self.rpmainwidget = QtWidgets.QWidget(self.centralwidget)
        self.rpmainwidget.setGeometry(QtCore.QRect(50, 120, 811, 421))
        self.rpmainwidget.setObjectName("rpmainwidget")
        self.graphicsView = QtWidgets.QGraphicsView(self.rpmainwidget)
        self.graphicsView.setGeometry(QtCore.QRect(20, 0, 381, 241))
        self.graphicsView.setObjectName("graphicsView")
        self.alislabel = QtWidgets.QLabel(self.rpmainwidget)
        self.alislabel.setGeometry(QtCore.QRect(503, 190, 141, 51))
        self.alislabel.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
                                     "color: rgb(0, 170, 0);""border: 2px solid black;")
        self.alislabel.setObjectName("alislabel")
        self.alislabel.setAlignment(Qt.AlignCenter)
        self.satislabel = QtWidgets.QLabel(self.rpmainwidget)
        self.satislabel.setGeometry(QtCore.QRect(639, 190, 141, 51))
        self.satislabel.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
                                      "color:rgb(255, 0, 0);\n"
                                      "border: 2px solid black;")
        self.satislabel.setObjectName("satislabel")
        self.satislabel.setAlignment(Qt.AlignCenter)
        self.widget_2 = QtWidgets.QWidget(self.rpmainwidget)
        self.widget_2.setGeometry(QtCore.QRect(50, 240, 331, 181))
        self.widget_2.setObjectName("widget_2")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.widget_2)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 331, 181))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")

        self.odunlbl = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.odunlbl.setStyleSheet("font: 8pt \"Impact\";")
        self.odunlbl.setObjectName("odunlbl")

        self.bugdaylbl = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.bugdaylbl.setStyleSheet("font: 8pt \"Impact\";")
        self.bugdaylbl.setObjectName("bugdaylbl")

        self.fndklbl = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.fndklbl.setStyleSheet("font: 8pt \"Impact\";")
        self.fndklbl.setObjectName("fndklbl")

        self.unlbl = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.unlbl.setStyleSheet("font: 8pt \"Impact\";")
        self.unlbl.setObjectName("unlbl")

        self.arpalbl = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.arpalbl.setStyleSheet("font: 8pt \"Impact\";")
        self.arpalbl.setObjectName("arpalbl")

        self.raporstoktable = QtWidgets.QTableWidget(self.rpmainwidget)
        self.raporstoktable.setGeometry(QtCore.QRect(520, 10, 217, 175))
        self.raporstoktable.setObjectName("raporstoktable")

        self.Raporpdfwidget = QtWidgets.QWidget(self.rpmainwidget)
        self.Raporpdfwidget.setGeometry(QtCore.QRect(490, 340, 241, 61))
        self.Raporpdfwidget.setObjectName("Raporpdfwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.Raporpdfwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 0, 241, 61))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.raporcktlbl = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.raporcktlbl.setFont(font)
        self.raporcktlbl.setObjectName("raporcktlbl")
        self.gridLayout.addWidget(self.raporcktlbl, 0, 0, 1, 2)
        self.kaydetbtn = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.kaydetbtn.setObjectName("kaydetbtn")
        self.kaydetbtn.setStyleSheet("\n"
                                     "background-color: rgb(255, 255, 255);\n"
                                     "alternate-background-color: rgb(0, 85, 255);")
        self.gridLayout.addWidget(self.kaydetbtn, 1, 0, 1, 2)

        self.karlabel = QtWidgets.QLabel(self.rpmainwidget)
        self.karlabel.setGeometry(QtCore.QRect(570, 242, 141, 51))
        self.karlabel.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
                                    "color: rgb(0, 170, 0);""border: 2px solid black;")
        self.karlabel.setObjectName("karlabel")
        self.karlabel.setAlignment(Qt.AlignCenter)
        self.raporstoktable.clear()
        self.rstokinsert()
        self.rpmainwidget.hide()

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 240, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuYonetici = QtWidgets.QMenu(self.menuBar)
        self.menuYonetici.setObjectName("menuYonetici")
        MainWindow.setMenuBar(self.menuBar)
        self.actionSifre_Degistir = QtWidgets.QAction(MainWindow)
        self.actionSifre_Degistir.setObjectName("actionSifre_Degistir")
        self.actionc_k_s_yap = QtWidgets.QAction(MainWindow)
        self.actionc_k_s_yap.setObjectName("actionc_k_s_yap")
        self.menuYonetici.addAction(self.actionSifre_Degistir)
        self.menuYonetici.addSeparator()
        self.menuYonetici.addAction(self.actionc_k_s_yap)
        self.menuBar.addAction(self.menuYonetici.menuAction())

        self.actionSifre_Degistir.triggered.connect(self.passwordchange)
        self.actionc_k_s_yap.triggered.connect(lambda :QApplication.quit())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.giderbtn.setToolTip(_translate("MainWindow", "ÃRÃN ÃIKIÅ"))
        self.giderbtn.setText(_translate("MainWindow", "MÃÅTERÄ°"))
        self.gelirbtn.setText(_translate("MainWindow", "TEDARÄ°K"))
        self.stkdrumubtn.setText(_translate("MainWindow", "STOK DURUMU"))
        self.gelirgidertakibbtn.setText(_translate("MainWindow", "MÃÅTERÄ°/TEDARÄ°K TAKÄ°BÄ°"))
        self.raporlabtn.setText(_translate("MainWindow", "RAPORLAR"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Stok Grafik"))
        self.groupBox.setTitle(_translate("MainWindow", "Stok ÃrÃ¼nleri"))
        self.menuYonetici.setTitle(_translate("MainWindow", "YÃ¶netici"))
        self.actionSifre_Degistir.setText(_translate("MainWindow", "Åifre DeÄiÅtir"))
        self.actionc_k_s_yap.setText(_translate("MainWindow", "ÃÄ±kÄ±Å Yap"))
        self.pushButton.setText("Sil")
        self.pushButton2.setText("Sil")
        self.msralamacmb.setItemText(0, _translate("MainWindow", "Tarihe GÃ¶re (En yakÄ±n)"))
        self.msralamacmb.setItemText(1, _translate("MainWindow", "Tarihe GÃ¶re (En uzak)"))
        self.msralamacmb.setItemText(2, _translate("MainWindow", "Tutar Artan"))
        self.msralamacmb.setItemText(3, _translate("MainWindow", "Tutar Azalan"))
        self.msralamacmb.setItemText(4, _translate("MainWindow", "TedarikÃ§iye GÃ¶re"))
        self.msralamacmb.setItemText(5, _translate("MainWindow", "ÃrÃ¼ne GÃ¶re"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tedarik"))
        self.msralamacmb_2.setItemText(0, _translate("MainWindow", "Tarihe GÃ¶re (En yakÄ±n)"))
        self.msralamacmb_2.setItemText(1, _translate("MainWindow", "Tarihe GÃ¶re (En uzak)"))
        self.msralamacmb_2.setItemText(2, _translate("MainWindow", "Tutar Artan"))
        self.msralamacmb_2.setItemText(3, _translate("MainWindow", "Tutar Azalan"))
        self.msralamacmb_2.setItemText(4, _translate("MainWindow", "MÃ¼Återiye GÃ¶re"))
        self.msralamacmb_2.setItemText(5, _translate("MainWindow", "ÃrÃ¼ne GÃ¶re"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "MÃ¼Återi"))


    def piechart(self):
        for i in reversed(range(self.layout.count())):
            self.layout.itemAt(i).widget().setParent(None)
        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()
        baglanti.execute('SELECT UStok FROM depo WHERE UID="1"')
        findik = baglanti.fetchall()
        ss = int(findik[0]['UStok'])
        baglanti.execute('SELECT UStok FROM depo WHERE UID="2"')
        odun = baglanti.fetchall()
        ss1 = int(odun[0]['UStok'])
        baglanti.execute('SELECT UStok FROM depo WHERE UID="3"')
        bugday = baglanti.fetchall()
        ss2 = int(bugday[0]['UStok'])
        baglanti.execute('SELECT UStok FROM depo WHERE UID="4"')
        arpa = baglanti.fetchall()
        ss3 = int(arpa[0]['UStok'])
        baglanti.execute('SELECT UStok FROM depo WHERE UID="5"')
        un = baglanti.fetchall()
        ss4 = int(un[0]['UStok'])

        series = QPieSeries()
        series.append("FINDIK", ss)
        series.append("ODUN", ss1)
        series.append("BUGDAY", ss2)
        series.append("ARPA", ss3)
        series.append("UN", ss4)

        series.setLabelsVisible()
        series.setLabelsPosition(QPieSlice.LabelInsideHorizontal)
        for slice in series.slices():
            slice.setLabel("{:.2f}%".format(100 * slice.percentage()))

        # adding slice
        slice = QPieSlice()
        slice = series.slices()[1]

        slice.setExploded(True)
        slice.setLabelVisible(True)
        slice.setPen(QPen(Qt.darkGreen, 2))
        slice.setBrush(QColor(32, 178, 170))
        series.slices()[2].setBrush(QColor(218, 165, 32))
        series.slices()[3].setBrush(QColor(127, 255, 212))
        series.slices()[4].setBrush(QColor(238, 126, 21))
        series.slices()[0].setBrush(QColor(30, 144, 255))

        chart = QChart()
        chart.legend().hide()
        chart.addSeries(series)
        chart.createDefaultAxes()
        chart.setAnimationOptions(QChart.SeriesAnimations)
        chart.setTitle("Stok Durumu")

        chart.legend().markers(series)[0].setLabel("FINDIK")
        chart.legend().markers(series)[1].setLabel("ODUN")
        chart.legend().markers(series)[2].setLabel("BUGDAY")
        chart.legend().markers(series)[3].setLabel("ARPA")
        chart.legend().markers(series)[4].setLabel("UN")

        chart.legend().setVisible(True)
        chart.legend().setAlignment(Qt.AlignRight)
        self.chartview = QChartView(chart)
        self.chartview.setRenderHint(QPainter.Antialiasing)

        self.layout.addWidget(self.chartview)
        self.stokgraphic.setLayout(self.layout)

    def updatestok(self):
        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        baglanti.execute('SELECT SUM(UMiktar) FROM tedarikgirdi WHERE UID="1"')
        updtadepo1 = baglanti.fetchall()
        ss1 = int(updtadepo1[0]['SUM(UMiktar)'])
        ##
        baglanti.execute('SELECT SUM(UMiktar) FROM musterigirdi WHERE UID="1"')
        mupdtadepo1 = baglanti.fetchall()
        mss = int(mupdtadepo1[0]['SUM(UMiktar)'])
        mtss = ss1 - mss
        baglanti.execute(f"UPDATE depo SET UStok='{mtss}' WHERE UID='1'")
        db.commit()

        baglanti.execute('SELECT SUM(UMiktar) FROM tedarikgirdi WHERE UID="2"')
        updtadepo2 = baglanti.fetchall()
        ss2 = int(updtadepo2[0]['SUM(UMiktar)'])
        baglanti.execute('SELECT SUM(UMiktar) FROM musterigirdi WHERE UID="2"')
        mupdtadepo2 = baglanti.fetchall()
        mss1 = int(mupdtadepo2[0]['SUM(UMiktar)'])
        mtss1 = ss2 - mss1
        baglanti.execute(f"UPDATE depo SET UStok='{mtss1}' WHERE UID='2'")
        db.commit()

        baglanti.execute('SELECT SUM(UMiktar) FROM tedarikgirdi WHERE UID="3"')
        updtadepo3 = baglanti.fetchall()
        ss3 = int(updtadepo3[0]['SUM(UMiktar)'])
        baglanti.execute('SELECT SUM(UMiktar) FROM musterigirdi WHERE UID="3"')
        mupdtadepo3 = baglanti.fetchall()
        mss2 = int(mupdtadepo3[0]['SUM(UMiktar)'])
        mtss2 = ss3 - mss2
        baglanti.execute(f"UPDATE depo SET UStok='{mtss2}' WHERE UID='3'")
        db.commit()

        baglanti.execute('SELECT SUM(UMiktar) FROM tedarikgirdi WHERE UID="4"')
        updtadepo4 = baglanti.fetchall()
        ss4 = int(updtadepo4[0]['SUM(UMiktar)'])
        baglanti.execute('SELECT SUM(UMiktar) FROM musterigirdi WHERE UID="4"')
        mupdtadepo4 = baglanti.fetchall()
        mss3 = int(mupdtadepo4[0]['SUM(UMiktar)'])
        mtss3 = ss4 - mss3
        baglanti.execute(f"UPDATE depo SET UStok='{mtss3}' WHERE UID='4'")
        db.commit()

        baglanti.execute('SELECT SUM(UMiktar) FROM tedarikgirdi WHERE UID="5"')
        updtadepo5 = baglanti.fetchall()
        ss5 = int(updtadepo5[0]['SUM(UMiktar)'])
        baglanti.execute('SELECT SUM(UMiktar) FROM musterigirdi WHERE UID="5"')
        mupdtadepo5 = baglanti.fetchall()
        mss4 = int(mupdtadepo5[0]['SUM(UMiktar)'])
        mtss4 = ss5 - mss4
        baglanti.execute(f"UPDATE depo SET UStok='{mtss4}' WHERE UID='5'")
        db.commit()

    def stokinsert(self):
        self.stablewidget.clear()
        self.stablewidget.setColumnCount(2)
        self.stablewidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.stablewidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.stablewidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()

        self.stablewidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()

        self.stablewidget.setColumnWidth(0, 100)
        self.stablewidget.setColumnWidth(1, 100)

        self.stablewidget.setHorizontalHeaderLabels(
            ["UID", "UStok"])

        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        count = baglanti.execute("SELECT * FROM depo ")
        self.ss = baglanti.fetchall()

        self.stablewidget.setRowCount(count)
        tablerow = 0
        for row in self.ss:
            self.uid = row['UID']
            baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
            uindex = baglanti.fetchall()

            usid = str(uindex[0]['UrunAd'])
            self.stablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(usid)))
            self.stablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row['UStok'])))


            tablerow += 1

    def mustericliked(self):
        self.rpmainwidget.hide()
        self.tabWidget.hide()
        self.widget5.show()
        self.widget_3.hide()
        self.mDialog = QtWidgets.QDialog()
        self.ui = UDM.Ui_Dialog()
        self.ui.setupUi(self.mDialog)
        self.mDialog.show()

    def tedarikcliked(self):
        self.rpmainwidget.hide()
        self.widget5.show()
        self.widget_3.hide()
        self.tDialog = QtWidgets.QDialog()
        self.ui = UDT.Ui_Dialog()
        self.ui.setupUi(self.tDialog)
        self.tDialog.show()
        self.tabWidget.hide()
        self.raporstoktable.clear()



    def musteritedariktakibclk(self):
        self.rpmainwidget.hide()
        self.widget5.hide()
        self.widget_3.hide()
        self.tabWidget.show()
        self.mtablewidget.clear()
        self.mtablewidget2.clear()
        self.raporstoktable.clear()
        self.tinsert()
        self.minsert()

    def stokdurumuclk(self):
        self.rpmainwidget.hide()

        self.updatestok()
        import pymysql
        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()
        #############################################
        self.widget5.hide()
        self.stablewidget.clear()

        self.stokinsert()

        self.tabWidget.hide()
        self.widget_3.show()

        self.piechart()

        ##########################################

    def raporlarclk(self):

        self.widget5.hide()

        self.tabWidget.hide()
        self.widget_3.hide()

        self.updatestok()
        ############################################

        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()
        baglanti.execute("select SUM(TTutar) from tedarikgirdi where DATE(GTTarih)>=NOW() - INTERVAL 1 month")
        tdrtarih = baglanti.fetchall()
        baglanti.execute("select SUM(GTutar) from musterigirdi where DATE(GTarih)>=NOW() - INTERVAL 1 month")
        msttarih = baglanti.fetchall()


        satÄ±slb=float(msttarih[0]['SUM(GTutar)'])
        alÄ±slb=float(tdrtarih[0]['SUM(TTutar)'])
        karlb=satÄ±slb-alÄ±slb

        _translate = QtCore.QCoreApplication.translate
        if satÄ±slb>alÄ±slb:
            self.karlabel.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
                                        "color: rgb(0, 170, 0);""border: 2px solid black;")
            self.karlabel.setText(_translate("MainWindow", f"KAR: {karlb} TL"))
        elif satÄ±slb<alÄ±slb:
            self.karlabel.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
                                        "color: rgb(255, 0, 0);""border: 2px solid black;")
            self.karlabel.setText(_translate("MainWindow", f"KAR: {karlb} TL"))
        else:
            self.karlabel.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n""border: 2px solid black;") #color: rgb(0, 170, 0);
            self.karlabel.setText(_translate("MainWindow", f"KAR: {karlb} TL"))


        ###################################################
        self.raporstoktable.clear()
        self.rstokinsert()

        ######################FINDIK############################
        if self.ss[0]['UStok'] <=150:
            self.verticalLayout.addWidget(self.fndklbl)
            self.fndklbl.setText(_translate("MainWindow", "â¢ FINDIK STOK ASGARÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. FINDIK ALINMASI GEREKÄ°YOR"))
        elif self.ss[0]['UStok'] >=500 :
            self.verticalLayout.addWidget(self.fndklbl)
            self.fndklbl.setText(
                _translate("MainWindow", "â¢ FINDIK STOK AZAMÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. FINDIK SATILMASI GEREKÄ°YOR"))
        else:
            pass
        #ODUN#
        if self.ss[1]['UStok'] <= 150:
            self.verticalLayout.addWidget(self.odunlbl)
            self.odunlbl.setText(
                _translate("MainWindow", "â¢ ODUN STOK ASGARÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. ODUN ALINMASI GEREKÄ°YOR"))
        elif self.ss[1]['UStok'] >= 500:
            self.verticalLayout.addWidget(self.odunlbl)
            self.odunlbl.setText(
                _translate("MainWindow", "â¢ ODUN STOK AZAMÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. ODUN SATILMASI GEREKÄ°YOR"))
        else:
            pass

        #BUGDAY#
        if self.ss[2]['UStok'] <= 150:
            self.verticalLayout.addWidget(self.bugdaylbl)
            self.bugdaylbl.setText(
                _translate("MainWindow", "â¢ BUGDAY STOK ASGARÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. BUGDAY ALINMASI GEREKÄ°YOR"))
        elif self.ss[2]['UStok'] >= 500:
            self.verticalLayout.addWidget(self.bugdaylbl)
            self.bugdaylbl.setText(
                _translate("MainWindow", "â¢ BUGDAY STOK AZAMÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. BUGDAY SATILMASI GEREKÄ°YOR"))
        else:
            pass

        #ARPA#
        if self.ss[3]['UStok'] <= 150:
            self.verticalLayout.addWidget(self.arpalbl)
            self.arpalbl.setText(
                _translate("MainWindow", "â¢ ARPA STOK ASGARÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. ARPA ALINMASI GEREKÄ°YOR"))
        elif self.ss[3]['UStok'] >= 500:
            self.verticalLayout.addWidget(self.arpalbl)
            self.arpalbl.setText(
                _translate("MainWindow", "â¢ ARPA STOK AZAMÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. ARPA SATILMASI GEREKÄ°YOR"))
        else:
            pass

        #UN#
        if self.ss[4]['UStok'] <= 150:
            self.verticalLayout.addWidget(self.unlbl)
            self.unlbl.setText(
                _translate("MainWindow", "â¢ UN STOK ASGARÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. UN ALINMASI GEREKÄ°YOR"))
        elif self.ss[4]['UStok'] >= 500:
            self.verticalLayout.addWidget(self.unlbl)
            self.unlbl.setText(
                _translate("MainWindow", "â¢ UN STOK AZAMÄ° LÄ°MÄ°TÄ°NE ÃOK YAKIN. UN SATILMASI GEREKÄ°YOR"))
        else:
            pass

        #####################################################
        self.alislabel.setText(_translate("MainWindow", f"SATIÅ : {int(satÄ±slb)} TL"))
        self.satislabel.setText(_translate("MainWindow", f"ÃRÃN ALIÅ: {int(alÄ±slb)} TL"))
        self.raporcktlbl.setText(_translate("MainWindow", "Raporu PDF Olarak Kaydet"))
        self.raporcktlbl.setAlignment(Qt.AlignCenter)
        self.kaydetbtn.setText(_translate("MainWindow", "KAYDET"))
        self.kaydetbtn.clicked.connect(self.pdfgnder)
        self.raporgraph()
        self.rpmainwidget.show()

    def rstokinsert(self):
        self.raporstoktable.clear()
        self.raporstoktable.setColumnCount(2)
        self.raporstoktable.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.raporstoktable.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.raporstoktable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()

        self.raporstoktable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()

        self.raporstoktable.setColumnWidth(0, 100)
        self.raporstoktable.setColumnWidth(1, 100)

        self.raporstoktable.setHorizontalHeaderLabels(
            ["UID", "UStok"])



        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        count = baglanti.execute("SELECT * FROM depo ")
        self.ss = baglanti.fetchall()

        self.raporstoktable.setRowCount(count)
        tablerow = 0
        for row in self.ss:
            self.uid = row['UID']
            baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
            uindex = baglanti.fetchall()

            usid = str(uindex[0]['UrunAd'])
            self.raporstoktable.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(usid)))
            self.raporstoktable.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row['UStok'])))

            tablerow += 1

    def msicerik(self):
        self.mtablewidget.clear()
        self.mtablewidget.setColumnCount(10)
        self.mtablewidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(9, item)

        self.mtablewidget.setColumnWidth(0, 30)
        self.mtablewidget.setColumnWidth(1, 150)
        self.mtablewidget.setColumnWidth(2, 50)
        self.mtablewidget.setColumnWidth(3, 50)
        self.mtablewidget.setColumnWidth(4, 60)
        self.mtablewidget.setColumnWidth(5, 70)
        self.mtablewidget.setColumnWidth(6, 70)
        self.mtablewidget.setColumnWidth(7, 70)
        self.mtablewidget.setColumnWidth(8, 220)
        self.mtablewidget.setColumnWidth(9, 50)

        _translate = QtCore.QCoreApplication.translate
        item = self.mtablewidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.mtablewidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "MGID"))
        item = self.mtablewidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "MID"))
        item = self.mtablewidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "UID"))
        item = self.mtablewidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "UMiktar"))
        item = self.mtablewidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Umiktarbirim"))
        item = self.mtablewidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "UBirimFiyat"))
        item = self.mtablewidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Ufiyatbirim"))
        item = self.mtablewidget.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "GTarih"))
        item = self.mtablewidget.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "GAcÄ±klama"))
        item = self.mtablewidget.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "GTutar"))

    def tsicerik(self):
        self.mtablewidget2.clear()
        self.mtablewidget2.setColumnCount(10)
        self.mtablewidget2.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(9, item)

        self.mtablewidget2.setColumnWidth(0, 30)
        self.mtablewidget2.setColumnWidth(1, 150)
        self.mtablewidget2.setColumnWidth(2, 50)
        self.mtablewidget2.setColumnWidth(3, 50)
        self.mtablewidget2.setColumnWidth(4, 60)
        self.mtablewidget2.setColumnWidth(5, 70)
        self.mtablewidget2.setColumnWidth(6, 70)
        self.mtablewidget2.setColumnWidth(7, 70)
        self.mtablewidget2.setColumnWidth(8, 220)
        self.mtablewidget2.setColumnWidth(9, 50)

        _translate = QtCore.QCoreApplication.translate
        item = self.mtablewidget2.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.mtablewidget2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "TGID"))
        item = self.mtablewidget2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "TID"))
        item = self.mtablewidget2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "UID"))
        item = self.mtablewidget2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "UMiktar"))
        item = self.mtablewidget2.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "UBirimtur"))
        item = self.mtablewidget2.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Ubirimfiyati"))
        item = self.mtablewidget2.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Ufiyattur"))
        item = self.mtablewidget2.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "GTTarih"))
        item = self.mtablewidget2.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "TAcÄ±klama"))
        item = self.mtablewidget2.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "TTutar"))

    def change(self):

        self.mtablewidget.clear()
        self.mtablewidget.setColumnCount(10)
        self.mtablewidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget.setHorizontalHeaderItem(9, item)

        self.mtablewidget.setColumnWidth(0, 30)
        self.mtablewidget.setColumnWidth(1, 150)
        self.mtablewidget.setColumnWidth(2, 50)
        self.mtablewidget.setColumnWidth(3, 50)
        self.mtablewidget.setColumnWidth(4, 60)
        self.mtablewidget.setColumnWidth(5, 70)
        self.mtablewidget.setColumnWidth(6, 70)
        self.mtablewidget.setColumnWidth(7, 70)
        self.mtablewidget.setColumnWidth(8, 220)
        self.mtablewidget.setColumnWidth(9, 50)

        _translate = QtCore.QCoreApplication.translate
        item = self.mtablewidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.mtablewidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "MGID"))
        item = self.mtablewidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "MID"))
        item = self.mtablewidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "UID"))
        item = self.mtablewidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "UMiktar"))
        item = self.mtablewidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Umiktarbirim"))
        item = self.mtablewidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "UBirimFiyat"))
        item = self.mtablewidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Ufiyatbirim"))
        item = self.mtablewidget.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "GTarih"))
        item = self.mtablewidget.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "GAcÄ±klama"))
        item = self.mtablewidget.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "GTutar"))

        import pymysql
        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        sÄ±ralamatxt = str(self.msralamacmb_2.currentText())

        if sÄ±ralamatxt == "Tarihe GÃ¶re (En yakÄ±n)":

            count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY GTarih DESC")
            self.ss = baglanti.fetchall()
            self.mtablewidget.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

                self.mid = row['MID']
                baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
                mindex = baglanti.fetchall()

                msid = str(mindex[0]['MAdSoyad'])
                self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
                self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
                self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
                self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
                self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
                self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

                tablerow += 1

        elif sÄ±ralamatxt == "Tarihe GÃ¶re (En uzak)":
            count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY GTarih ASC")
            self.ss = baglanti.fetchall()
            self.mtablewidget.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

                self.mid = row['MID']
                baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
                mindex = baglanti.fetchall()

                msid = str(mindex[0]['MAdSoyad'])
                self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
                self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
                self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
                self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
                self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
                self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

                tablerow += 1

        elif sÄ±ralamatxt == 'Tutar Artan':
            count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY GTutar DESC")
            self.ss = baglanti.fetchall()
            self.mtablewidget.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

                self.mid = row['MID']
                baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
                mindex = baglanti.fetchall()

                msid = str(mindex[0]['MAdSoyad'])
                self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
                self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
                self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
                self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
                self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
                self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'Tutar Azalan':
            count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY GTutar ASC")
            self.ss = baglanti.fetchall()
            self.mtablewidget.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

                self.mid = row['MID']
                baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
                mindex = baglanti.fetchall()

                msid = str(mindex[0]['MAdSoyad'])
                self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
                self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
                self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
                self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
                self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
                self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'MÃ¼Återiye GÃ¶re':

            count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY MID ASC")
            self.ss = baglanti.fetchall()
            self.mtablewidget.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

                self.mid = row['MID']
                baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
                mindex = baglanti.fetchall()

                msid = str(mindex[0]['MAdSoyad'])
                self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
                self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
                self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
                self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
                self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
                self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'ÃrÃ¼ne GÃ¶re':

            count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY UID ASC")
            self.ss = baglanti.fetchall()
            self.mtablewidget.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

                self.mid = row['MID']
                baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
                mindex = baglanti.fetchall()

                msid = str(mindex[0]['MAdSoyad'])
                self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
                self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
                self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
                self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
                self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
                self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

                tablerow += 1

    def changet(self):
        self.mtablewidget2.clear()
        self.mtablewidget2.setColumnCount(10)
        self.mtablewidget2.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.mtablewidget2.setHorizontalHeaderItem(9, item)

        self.mtablewidget2.setColumnWidth(0, 30)
        self.mtablewidget2.setColumnWidth(1, 150)
        self.mtablewidget2.setColumnWidth(2, 50)
        self.mtablewidget2.setColumnWidth(3, 50)
        self.mtablewidget2.setColumnWidth(4, 60)
        self.mtablewidget2.setColumnWidth(5, 70)
        self.mtablewidget2.setColumnWidth(6, 70)
        self.mtablewidget2.setColumnWidth(7, 70)
        self.mtablewidget2.setColumnWidth(8, 220)
        self.mtablewidget2.setColumnWidth(9, 50)
        self.mtablewidget2.setHorizontalHeaderLabels(
            ["TGID", "TID", "UID", "UMiktar", "UBirimtur", "Ubirimfiyati", "Ufiyattur", "GTTarih", "TAcÄ±klama"])

        _translate = QtCore.QCoreApplication.translate
        item = self.mtablewidget2.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.mtablewidget2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "TGID"))
        item = self.mtablewidget2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "TID"))
        item = self.mtablewidget2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "UID"))
        item = self.mtablewidget2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "UMiktar"))
        item = self.mtablewidget2.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "UBirimtur"))
        item = self.mtablewidget2.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Ubirimfiyati"))
        item = self.mtablewidget2.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Ufiyattur"))
        item = self.mtablewidget2.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "GTTarih"))
        item = self.mtablewidget2.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "TAcÄ±klama"))
        item = self.mtablewidget2.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "TTutar"))
        ######################################################

        import pymysql
        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        sÄ±ralamatxt = str(self.msralamacmb.currentText())

        if sÄ±ralamatxt == "Tarihe GÃ¶re (En yakÄ±n)":
            count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY GTTarih DESC")
            self.ss = baglanti.fetchall()

            self.mtablewidget2.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

                self.tid = row['TID']
                baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
                tindex = baglanti.fetchall()

                tsid = str(tindex[0]['TSA'])
                self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
                self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
                self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
                self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
                self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
                self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == "Tarihe GÃ¶re (En uzak)":
            count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY GTTarih ASC")
            self.ss = baglanti.fetchall()

            self.mtablewidget2.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

                self.tid = row['TID']
                baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
                tindex = baglanti.fetchall()

                tsid = str(tindex[0]['TSA'])
                self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
                self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
                self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
                self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
                self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
                self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'Tutar Artan':
            count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY TTutar DESC")
            self.ss = baglanti.fetchall()

            self.mtablewidget2.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

                self.tid = row['TID']
                baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
                tindex = baglanti.fetchall()

                tsid = str(tindex[0]['TSA'])
                self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
                self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
                self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
                self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
                self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
                self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'Tutar Azalan':
            count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY TTutar ASC")
            self.ss = baglanti.fetchall()

            self.mtablewidget2.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

                self.tid = row['TID']
                baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
                tindex = baglanti.fetchall()

                tsid = str(tindex[0]['TSA'])
                self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
                self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
                self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
                self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
                self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
                self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'TedarikÃ§iye GÃ¶re':
            count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY TID DESC")
            self.ss = baglanti.fetchall()

            self.mtablewidget2.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

                self.tid = row['TID']
                baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
                tindex = baglanti.fetchall()

                tsid = str(tindex[0]['TSA'])
                self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
                self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
                self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
                self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
                self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
                self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

                tablerow += 1
        elif sÄ±ralamatxt == 'ÃrÃ¼ne GÃ¶re':
            count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY UID DESC")
            self.ss = baglanti.fetchall()

            self.mtablewidget2.setRowCount(count)
            tablerow = 0
            for row in self.ss:
                self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

                self.tid = row['TID']
                baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
                tindex = baglanti.fetchall()

                tsid = str(tindex[0]['TSA'])
                self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

                self.uid = row['UID']
                baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
                uindex = baglanti.fetchall()

                usid = str(uindex[0]['UrunAd'])
                self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
                self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
                self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
                self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
                self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
                self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
                self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
                self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

                tablerow += 1

    def minsert(self):
        self.mtablewidget.clear()
        self.msicerik()

        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        count = baglanti.execute("SELECT * FROM musterigirdi ORDER BY GTarih DESC")
        self.ss = baglanti.fetchall()

        self.mtablewidget.setRowCount(count)
        tablerow = 0
        for row in self.ss:
            self.mtablewidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['MGID'])))

            self.mid = row['MID']
            baglanti.execute(f'SELECT MAdSoyad FROM musteri WHERE  MID="{self.mid}" ')
            mindex = baglanti.fetchall()

            msid = str(mindex[0]['MAdSoyad'])
            self.mtablewidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(msid)))

            self.uid = row['UID']
            baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
            uindex = baglanti.fetchall()

            usid = str(uindex[0]['UrunAd'])
            self.mtablewidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
            self.mtablewidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
            self.mtablewidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['Umiktarbirim'])))
            self.mtablewidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['UBirimFiyat'])))
            self.mtablewidget.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyatbirim'])))
            self.mtablewidget.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTarih'])))
            self.mtablewidget.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['GAcÄ±klama'])))
            self.mtablewidget.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['GTutar'])))

            tablerow += 1

    def tinsert(self):
        self.mtablewidget2.clear()
        self.tsicerik()


        db = pymysql.connect(host='127.0.0.1',
                             user='root',
                             password='',
                             db='test',
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor
                             )
        baglanti = db.cursor()

        count = baglanti.execute("SELECT * FROM tedarikgirdi ORDER BY GTTarih DESC")
        self.ss = baglanti.fetchall()

        self.mtablewidget2.setRowCount(count)
        tablerow = 0
        for row in self.ss:
            self.mtablewidget2.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row['TGID'])))

            self.tid = row['TID']
            baglanti.execute(f'SELECT TSA FROM tedarikci WHERE  TID="{self.tid}" ')
            tindex = baglanti.fetchall()

            tsid = str(tindex[0]['TSA'])
            self.mtablewidget2.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(tsid)))

            self.uid = row['UID']
            baglanti.execute(f'SELECT UrunAd FROM urunler WHERE  UID="{self.uid}" ')
            uindex = baglanti.fetchall()

            usid = str(uindex[0]['UrunAd'])
            self.mtablewidget2.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(usid)))
            self.mtablewidget2.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row['UMiktar'])))
            self.mtablewidget2.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row['UBirimtur'])))
            self.mtablewidget2.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row['Ubirimfiyati'])))
            self.mtablewidget2.setItem(tablerow, 6, QtWidgets.QTableWidgetItem(str(row['Ufiyattur'])))
            self.mtablewidget2.setItem(tablerow, 7, QtWidgets.QTableWidgetItem(str(row['GTTarih'])))
            self.mtablewidget2.setItem(tablerow, 8, QtWidgets.QTableWidgetItem(str(row['TAcÄ±klama'])))
            self.mtablewidget2.setItem(tablerow, 9, QtWidgets.QTableWidgetItem(str(row['TTutar'])))

            tablerow += 1

    def search(self, s):


        self.mtablewidget.setCurrentItem(None)

        if not s:
            return

        matching_items = self.mtablewidget.findItems(s, Qt.MatchContains)

        # brush = QtGui.QBrush(QtGui.QColor("orange"))
        # brush.setStyle(QtCore.Qt.SolidPattern)

        if matching_items:

            for item in matching_items:
                # item.setForeground(brush)
                item.setSelected(True)

    def Rsearch(self, s):


        self.mtablewidget2.setCurrentItem(None)

        if not s:

            return

        matching_items = self.mtablewidget2.findItems(s, Qt.MatchContains)
        if matching_items:

            for item in matching_items:
                item.setSelected(True)
        # deletetablem silinecek

    def show_popup(self):
        try:
            import pymysql
            db = pymysql.connect(host='127.0.0.1',
                                 user='root',
                                 password='',
                                 db='test',
                                 charset='utf8mb4',
                                 cursorclass=pymysql.cursors.DictCursor
                                 )
            baglanti = db.cursor()

            msgBox = QMessageBox()
            msgBox.setIcon(QMessageBox.Information)
            msgBox.setText("SeÃ§tiÄiniz Ã¼rÃ¼n veri tabanÄ±ndan kalÄ±cÄ± olarak silinecek.\n\t   SeÃ§ilen Ã¼rÃ¼n silinsin mi ?")
            msgBox.setWindowTitle("UYARI")
            msgBox.setWindowIcon(QtGui.QIcon("../ProjeÄ°cerik/icons/warning (1).png"))
            msgBox.setIcon(QMessageBox.Warning)
            msgBox.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            buttony = msgBox.button(QMessageBox.Yes)
            buttony.setText("Evet")
            buttonN = msgBox.button(QMessageBox.No)
            buttonN.setText("HayÄ±r")


            selection = self.mtablewidget.currentItem().row()
            self.selitem = self.mtablewidget.item(selection, 0).text()

            self.dropalitem = self.mtablewidget.item(selection, 3).text()

            self.adlitem = self.mtablewidget.item(selection, 2).text()


            returnValue = msgBox.exec()
            if returnValue == QMessageBox.Yes:

                self.mtablewidget.removeRow(selection)

                baglanti.execute(f"DELETE FROM musterigirdi WHERE MGID='{self.selitem}' ")

                db.commit()



            else:
                self.mtablewidget.clearSelection()
                return self.mtablewidget.NoSelection
        except AttributeError as g:

            msgBox2 = QMessageBox()
            msgBox2.setIcon(QMessageBox.Information)
            msgBox2.setText("SeÃ§ili bir sÃ¼tÃ¼n bulunmamaktadÄ±r ")
            msgBox2.setWindowTitle("UYARI")
            msgBox2.setWindowIcon(QtGui.QIcon("../ProjeÄ°cerik/icons/warning (1).png"))
            msgBox2.setIcon(QMessageBox.Warning)
            msgBox2.setStandardButtons(QMessageBox.Ok)
            buttono = msgBox2.button(QMessageBox.Ok)
            buttono.setText("Tamam")

            msgBox2.show()
            returnValue = msgBox2.exec()
            if returnValue == QMessageBox.Ok:
                return

    def tdrk_show_popup(self):
        try:
            import pymysql
            db = pymysql.connect(host='127.0.0.1',
                                 user='root',
                                 password='',
                                 db='test',
                                 charset='utf8mb4',
                                 cursorclass=pymysql.cursors.DictCursor
                                 )
            baglanti = db.cursor()

            msgBox = QMessageBox()
            msgBox.setIcon(QMessageBox.Information)
            msgBox.setText("SeÃ§tiÄiniz Ã¼rÃ¼n veri tabanÄ±ndan kalÄ±cÄ± olarak silinecek.\n\t   SeÃ§ilen Ã¼rÃ¼n silinsin mi ?")
            msgBox.setWindowTitle("UYARI")
            msgBox.setWindowIcon(QtGui.QIcon("../ProjeÄ°cerik/icons/warning (1).png"))
            msgBox.setIcon(QMessageBox.Warning)
            msgBox.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            buttony = msgBox.button(QMessageBox.Yes)
            buttony.setText("Evet")
            buttonN = msgBox.button(QMessageBox.No)
            buttonN.setText("HayÄ±r")

            selection = self.mtablewidget2.currentItem().row()
            self.tselitem = self.mtablewidget2.item(selection, 0).text()

            returnValue = msgBox.exec()
            if returnValue == QMessageBox.Yes:

                self.mtablewidget2.removeRow(selection)

                baglanti.execute(f"DELETE FROM tedarikgirdi WHERE TGID='{self.tselitem}' ")

                db.commit()

            else:
                pass
        except AttributeError as e:
            msgBox2 = QMessageBox()
            msgBox2.setIcon(QMessageBox.Information)
            msgBox2.setText("SeÃ§ili bir sÃ¼tÃ¼n bulunmamaktadÄ±r ")
            msgBox2.setWindowTitle("UYARI")
            msgBox2.setWindowIcon(QtGui.QIcon("../ProjeÄ°cerik/icons/warning (1).png"))
            msgBox2.setIcon(QMessageBox.Warning)
            msgBox2.setStandardButtons(QMessageBox.Ok)
            buttono = msgBox2.button(QMessageBox.Ok)
            buttono.setText("Tamam")

            msgBox2.show()
            returnValue = msgBox2.exec()
            if returnValue == QMessageBox.Ok:
                return


    def pdfgnder(self):
        from fpdf import FPDF

        import matplotlib.pyplot as plt
        from matplotlib import rcParams
        rcParams['axes.spines.top'] = False
        rcParams['axes.spines.right'] = False

        p2=QPixmap()
        p2=self.graphicsView.grab()
        p2.save("aylikgraph.png","PNG")


        p = QPixmap()
        p = self.stokgraphic.grab()
        p.save("Piechart.png", "PNG")

        pdf = FPDF()

        pdf.add_page()

        pdf.set_font("Arial", size=25)

        # create a cell

        pdf.image('baslÄ±k.png', x=20, y=20, w=161, h=40)
        pdf.image('aylikgraph.png', x=10, y=75, w=91, h=65)
        pdf.image('Piechart.png', x=111, y=70, w=91, h=75)
        pdf.image('altbaslÄ±k.png', x=0, y=150, w=210, h=150)

        pdf.output("C:/Users/Yunn/Desktop/Rapor.pdf")

        import os
        os.remove("aylikgraph.png")
        os.remove("Piechart.png")

        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setText("Rapor MasaÃ¼stÃ¼ne PDF olarak kaydedildi ")
        msgBox.setWindowTitle("UYARI")
        msgBox.setWindowIcon(QtGui.QIcon("../ProjeÄ°cerik/icons/wheat.png"))

        msgBox.setStandardButtons(QMessageBox.Close)
        buttonc = msgBox.button(QMessageBox.Close)
        buttonc.setText("Kapat")
        returnValue = msgBox.exec()

    def raporgraph(self):
        for i in reversed(range(self.layoutrpr.count())):
            self.layoutrpr.itemAt(i).widget().setParent(None)
        db = pymysql.connect(host='127.0.0.1',
                                 user='root',
                                 password='',
                                 db='test',
                                 charset='utf8mb4',
                                 cursorclass=pymysql.cursors.DictCursor
                                 )
        baglanti = db.cursor()
        baglanti.execute(
                    "select GTTarih,TTutar from tedarikgirdi where DATE(GTTarih)>=NOW() - INTERVAL 1 month ORDER BY GTTarih ASC")
        tdrtarih = baglanti.fetchall()
        baglanti.execute(
                    "select GTarih,GTutar from musterigirdi where DATE(GTarih)>=NOW() - INTERVAL 1 month ORDER BY GTarih ASC")
        msttarih = baglanti.fetchall()
        y = 0
        self.series = QLineSeries()
        self.series2 = QLineSeries()
        for x in msttarih:
                nowtarih = f"{msttarih[y]['GTarih']}"
                nowtutar = msttarih[y]['GTutar']

                self.series.append(y, int(25))
                y += 1

        z = 0

        for i in tdrtarih:

                nowtdrtutar = tdrtarih[z]['TTutar']
                self.series2.append(z, int(nowtdrtutar))

                z += 1

        self.series.setPen(QPen(Qt.darkGreen, 2))
        self.series2.setPen(QPen(Qt.red, 2))

        self.series2.setName("TEDARÄ°K")
        self.series.setName("SATIÅ")

        self.series.setPointsVisible(True)
        self.series2.setPointsVisible(True)

        self.chart = QChart()
        self.chart.legend()
        self.chart.addSeries(self.series)
        self.chart.addSeries(self.series2)

        self.chart.createDefaultAxes()

        self.chart.axisX().setLabelsVisible(False)
        self.chart.setAcceptHoverEvents(True)
        self.chart.axisX().setTitleText("30 GÃ¼nlÃ¼k Rapor ")
        self.chart.setAnimationOptions(QChart.AllAnimations)

        self._chart_view = QChartView(self.chart)
        self._chart_view.setRenderHint(QPainter.Antialiasing)


        self.layoutrpr.addWidget(self._chart_view)
        self.graphicsView.setLayout(self.layoutrpr)

    def passwordchange(self):
        self.chnDialog = QtWidgets.QDialog()
        self.ui = UCP.Ui_Dialog()
        self.ui.setupUi(self.chnDialog)
        self.chnDialog.show()







if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
